
user  nginx;
worker_processes  auto;
### OS のファイルディスクリプタ数 `ulimit -n` / worker_processes より小さくする
### 場合によっては OS ファイルディスクリプタ数を多きくする必要がある
worker_rlimit_nofile 8192;
events {
    ### worker_rlimit_nofile ぐらい
    worker_connections  8192;
    ### 同時に複数のアクセスを受け入れることが可能
    ### このオプション自信ないのでバグったら消してみる
    multi_accept on;
    ### Linux2.6以上ではこれが最適らしい
    use epoll; 
}

### error.log のレベルを 開発向けに debug にする
# error_log  /var/log/nginx/error.log notice;
error_log  /var/log/nginx/error.log debug;
pid        /var/run/nginx.pid;

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    ### alp でパースできるように log のフォーマットを json に変更
    ### https://github.com/tkuchiki/alp
    log_format json escape=json '{"time":"$time_local",'
                            '"host":"$remote_addr",'
                            '"forwardedfor":"$http_x_forwarded_for",'
                            '"req":"$request",'
                            '"status":"$status",'
                            '"method":"$request_method",'
                            '"uri":"$request_uri",'
                            '"body_bytes":$body_bytes_sent,'
                            '"referer":"$http_referer",'
                            '"ua":"$http_user_agent",'
                            '"request_time":$request_time,'
                            '"cache":"$upstream_http_x_cache",'
                            '"runtime":"$upstream_http_x_runtime",'
                            '"response_time":"$upstream_response_time",'
                            '"vhost":"$host"}';
    access_log  /var/log/nginx/access.log  json;

    ### sendfile システムコールを使用することで性能向上 (NFS 使う時は off にする)
    sendfile        on;
    tcp_nopush     on;

    ### クライアントとの接続維持時間 (websocket との兼ね合いありそう)
    keepalive_timeout  65;

    ### レスポンスを gzip 圧縮するなら
    gzip  on;
    gzip_comp_level 1;
    gzip_min_length 1k;
    gzip_types text/* application/json application/javascript application/x-javascript;

    include /etc/nginx/conf.d/*.conf;
}
